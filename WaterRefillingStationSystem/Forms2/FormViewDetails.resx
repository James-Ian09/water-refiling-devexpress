<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="FormViewDetails.IconOptions.LargeImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>