<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButtonRemove.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACl0RVh0VGl0
        bGUAUmVtb3ZlO0RlbGV0ZTtCYXJzO1JpYmJvbjtTdGFuZGFyZDtjVkgwAAAHvUlEQVRYR8WWfTiWZx/H
        z7bnWVsUq1b2qNxE6uYuLyGpbpEQoiTzqKet9aqxCuU1yi3hTonV9IT0ZofVjiyVhpS39ERiq6PaDL2g
        Mam17Ngz1/c5fvd9XbpxO7b98+w8jg+X0/X7fb/nef3O33UxAOyvZNDE/xvlD/VjGGPsNR66/jOD7h8Y
        PyjHUAaEwL8zxobz0PUfNUL3vM4Ye4Mx9hYP5aC5fvHqDAjBw6/6+gY1J+7paU5M6Cn18fmIMfamkOTW
        ihWMqFvhr8RfCR//NxIt8l4a2Bgf39Mok/UUenltYYyN4P/XZ2KgAUH8zSvLl4U9SJfjv4/qFTQfSEKx
        t3cwvxqFid72b5iCNuJrVfERFzw9tzbtS8CvzbX4takG3+9LwIXFnpGMMQ1VE+oMvHHZ23trS7ocv9yu
        wLPCPHSfO4lf6kvRlJqEQs/+K/mttYH99rhBVVzjS3eP4MaUBLy88RU6j3+CjsPJeFF2Fo17d6PAzT2U
        30l6nIMMvGYjEmnej43teVlbjO78E3h6OktB1+lMvKwpAiU+5+ZBO6G6kj7xs4vcgr9LluHn6kJ0ZKei
        /WACnqTHoy01Dt0XT+FOeGSPiY6OFr+Lgwy87mY0Rbtqzbpnnadz8GNuxitOfYrOk4fwc/UFkMBZ10Vk
        QpMvNELzjLNryP3EOLyoPI+OIyloSyPhXWjbF4tWeTQeJkaiYvXaF9JJemOGMkDbMvygxPz9qyv9ezuO
        pqEjh+foAfyQTaTip/J83N+zC587uYQwxrSJPCfn0HsJO/FTWT6eZCSjdd9OPE6JwWN5NB4lRuDB7jCU
        eLr37hfP+JCvI7WPQCjCEfunmW4o9fPtbT8sx5N/78WTw4Qc7RlytH+ahOclp3FXFoPj8x3Dj9s7ht+R
        7cDz0i/Q9kkCHu/dgYdJUXi4JwIP4rejJS4El9xcehMNp25ijI3kj7TaIhRM0PPUTJpsHFC0dElva/pu
        RWL63ZoWj9YD8WhNleHpxVO4HRupoLsoTzFH20yrfSDbhpZdIWiO2YLzTgs4mciQjvEoVXG1BjKNxIIJ
        unHkbj3DgIse7r0PU2LxiNgbg0fyHXiYrFzlj2ePoqvgBB7JY9AStw3NcSFojt2KppgtaIwMQr69lIv5
        h14gY4wKj2qlXzMbZOCwaAp7XnpG1cSo2AmiTQUuzr0tCeF4kBCOlt1haIkPQ7OMBEPRvDMYTSQavRnf
        RwWhMTIQ323fiNN2s7nwd3SD+DrpE0/X1e/TG2Tg4AQD1v1VLuu+lNvPROR43cAztjbcvU0r8W3oejRu
        24jG8E1oFARDN+D+lg9xL2gV7qzxwWdmM7jQ0eM/HijemZ/N9o+fMLSBA+9OYl0Fx1hXQQ7rOpdDU4qT
        wRgbGzxWJzjPwpxr8HXB18RyZzT4KKn3WYiGZQtRv8wJJ8XTuI+0xlDDGafSdIZ15GUwYu8YnaENnLd3
        Yp1fHGGdZ47Qn7QDFExJ3kk1t95RtWoFvlnphVtLnXgWoG6JI+qWOvK/F6DsPR/IJZaxjLHxKkduWPuJ
        NEYka5OvIQx8OceR/ZB7UFWctu/tNDPriGtrV6M5MRz1fm646eWAm57EfNQuno+bHvaoXSxFjYcU30YE
        oHzVSqSYzoxijFHToR1UmGjNlLPPZ84Z2sBZW3tVcQocvX/6zMiKD/6FJlkI6pa7oMZdihr3eahxn4sa
        t7m44TYPNxbNfYXrHNwNWYur/n5IFptH8yb63qSfWcwe2sBA8RRTi6iylf5ojNmMOm8n/Md1jhIXO1wn
        nInZPLa4vtAW1QtnodppFm4HrsLl5T5IMJ6+g2pItR6GMtBPXC42jyr188X9iADUejkokl9XJLdVCFxb
        MAvZk/U5osrBBtccrZU4WOGaoxWqHKzQsN4PRUuWQGZoGkN1NNCEOgP0zEcnTTWLKlnmjbsh61Djbv8q
        uaO1InGlvRWyDUTcOg2taOKo0WSuQjoTlfaWqLS3QKXUAhXzLFExzwK3PvBGobs7dhmYCCZogYMM0AQ9
        o5HxRpLgSx6Lcefj93HddS4q7ZWJK6SWqJRaonyeJbL09bhNmtrbGWO6RICmdli24WSubI4ZyvuYoaDM
        bjpq/+mBc44LES2auo3viopX+UAD1HTGnrKUdtev90e1ix0q5pqjXIGZgjI7M2SKJgnidJ7o44QYRyay
        DPS5K7YSXLWV4MoswhRXbJRUezsjRzL7GX88Fe8EtQaOmdl1VC2SosxO6b5sNiEBJc7Um8iREC8ufJ4R
        dD1uo6ZWeJa+iLtsLUaplRil1tOgvJ6GYitTZImtO/lYtQYo0aiwSVPW55lbc1dtybkJSm1McNnGBEcm
        TRgoLhSTULw0N36DhlZElkiPK7Y0RomlMS5bGKPEwhgnjCXcFh39AL49K47kUEU4NlTXcHOuxJwrshSj
        eKYYGbq6asXr1viwutXLhFjBhA6ZODxxIndpxhQUTjfCMSMTLmiciL6iaPuFxqT2FPS13uB3DTYcEkk6
        D4kkXes1tOh93q+3J2qNZaoM3Im1GlpBaRPFT9MmiDsDx+nRx0i/1qzOgGoScknVSkEEbVtfS1UNGDBU
        49+m3eCh675uKNyszgANIQkdFeGjk65/T1wYfzh+KAPCEApM4M+O343vM/BX8j/ZnMqD3PQ8qwAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="simpleButtonPaid.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QQAAAABJRU5ErkJggg==
</value>
  </data>
</root>