<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton3.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="simpleButton2.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>